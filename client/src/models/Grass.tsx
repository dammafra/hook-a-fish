/*
  Tuft of grass 
  by Poly by Google [CC-BY] (https://creativecommons.org/licenses/by/3.0/) 
  via Poly Pizza (https://poly.pizza/m/3tyh15Fbmsx)

  Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import { useGLTF } from '@react-three/drei'
import { useMemo, type JSX } from 'react'
import { BufferGeometry, Mesh } from 'three'
import { mergeGeometries } from 'three/examples/jsm/utils/BufferGeometryUtils.js'

export default function Grass(props: JSX.IntrinsicElements['group']) {
  const { scene, materials } = useGLTF('./models/grass.glb')

  const geometry = useMemo(() => {
    const geometries: BufferGeometry[] = []
    scene.traverse(child => {
      if (child instanceof Mesh) {
        const g = child.geometry.clone()
        g.applyMatrix4(child.matrixWorld)
        geometries.push(g)
      }
    })
    return mergeGeometries(geometries)
  }, [scene])

  return (
    <mesh
      {...props}
      castShadow
      receiveShadow
      dispose={null}
      material={materials._crayfishdiffuse}
      geometry={geometry}
    />
  )
}

useGLTF.preload('./models/grass.glb')
