/*
  Bucket
  by Quaternius (https://poly.pizza/m/83obI9bNun)
  
  Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useGLTF } from '@react-three/drei'
import type { ObjectMap } from '@react-three/fiber'
import { useEffect, type JSX } from 'react'
import type { Mesh, MeshStandardMaterial } from 'three'
import type { GLTF } from 'three-stdlib'

type GLTFResult = GLTF &
  ObjectMap & {
    nodes: {
      Bucket_1: Mesh
      Bucket_2: Mesh
      Bucket_3: Mesh
    }
    materials: {
      Wood: MeshStandardMaterial
      DarkMetal: MeshStandardMaterial
      Metal: MeshStandardMaterial
    }
  }

export default function Bucket(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('./models/bucket.glb') as GLTFResult

  useEffect(() => {
    materials.Wood.color.set('burlywood')
  }, [materials])

  return (
    <group {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, -Math.PI / 8]} scale={100}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Bucket_1.geometry}
          material={materials.Wood}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Bucket_2.geometry}
          material={materials.DarkMetal}
        />
        {/* <mesh
          castShadow
          receiveShadow
          geometry={nodes.Bucket_3.geometry}
          material={materials.Metal}
        /> */}
      </group>
    </group>
  )
}

useGLTF.preload('./models/bucket.glb')
