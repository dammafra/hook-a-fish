/*
    Fish Tank
    by J-ToastieÂ [CC-BY] (https://creativecommons.org/licenses/by/3.0/)
    via Poly Pizza (https://poly.pizza/m/FLnlsLbY2s)

    Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useGLTF } from '@react-three/drei'
import type { ObjectMap } from '@react-three/fiber'
import { useState, type JSX } from 'react'
import { DoubleSide, Mesh, MeshPhysicalMaterial, MeshStandardMaterial } from 'three'
import type { GLTF } from 'three-stdlib'

type GLTFResult = GLTF &
  ObjectMap & {
    nodes: {
      ['Fish_Tank_Cube003-Mesh']: Mesh
      ['Fish_Tank_Cube003-Mesh_1']: Mesh
      ['Fish_Tank_Cube003-Mesh_2']: Mesh
      ['Fish_Tank_Cube003-Mesh_3']: Mesh
      ['Fish_Tank_Cube003-Mesh_4']: Mesh
      ['Fish_Tank_Cube003-Mesh_5']: Mesh
    }
    materials: {
      Sand: MeshStandardMaterial
      Glass: MeshStandardMaterial
      Water: MeshStandardMaterial
      DarkGray: MeshStandardMaterial
      Plant: MeshStandardMaterial
      Stone: MeshStandardMaterial
    }
  }

export function FishTank(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('./models/fish-tank.glb') as GLTFResult
  const [waterMaterial] = useState(
    () =>
      new MeshPhysicalMaterial({
        color: 0x1e90ff, // base water color
        roughness: 0.05, // almost smooth
        metalness: 0, // non-metal
        transmission: 0.9, // mostly transparent
        thickness: 2, // thickness of the object
        ior: 1.33, // index of refraction for water
        transparent: true, // needed for transmission
        side: DoubleSide,
      }),
  )

  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes['Fish_Tank_Cube003-Mesh'].geometry}
        material={materials.Sand}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes['Fish_Tank_Cube003-Mesh_1'].geometry}
        material={materials.Glass}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes['Fish_Tank_Cube003-Mesh_2'].geometry}
        material={waterMaterial}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes['Fish_Tank_Cube003-Mesh_3'].geometry}
        material={materials.DarkGray}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes['Fish_Tank_Cube003-Mesh_4'].geometry}
        material={materials.Plant}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes['Fish_Tank_Cube003-Mesh_5'].geometry}
        material={materials.Stone}
      />
    </group>
  )
}

useGLTF.preload('./models/fish-tank.glb')
